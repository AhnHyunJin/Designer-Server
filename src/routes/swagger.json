{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"AcceptableDbms": {
				"enum": [
					"mysql",
					"oracle",
					"mariadb",
					"postgres",
					"cubrid"
				],
				"type": "string"
			},
			"UserInterface": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"username",
					"token",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"$ref": "#/components/schemas/UserInterface"
			},
			"Service": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"method": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"entityName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					},
					"columnLength": {
						"type": "number",
						"format": "double"
					},
					"dataCounts": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"application": {
						"$ref": "#/components/schemas/Application"
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					},
					"columns": {
						"items": {
							"$ref": "#/components/schemas/ServiceColumn"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"title",
					"method",
					"description",
					"entityName",
					"tableName",
					"columnLength",
					"dataCounts",
					"status",
					"user",
					"application",
					"meta",
					"columns",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Application": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"nameSpace": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"userId": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"services": {
						"items": {
							"$ref": "#/components/schemas/Service"
						},
						"type": "array"
					},
					"trafficConfigs": {
						"items": {
							"$ref": "#/components/schemas/TrafficConfig"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"nameSpace",
					"title",
					"description",
					"status",
					"userId",
					"user",
					"services",
					"trafficConfigs",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TrafficConfig": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"application": {
						"$ref": "#/components/schemas/Application"
					},
					"type": {
						"type": "string"
					},
					"maxCount": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"application",
					"type",
					"maxCount",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Meta": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"dataType": {
						"type": "string"
					},
					"originalFileName": {
						"type": "string"
					},
					"remoteFilePath": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					},
					"extension": {
						"type": "string"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"db": {
						"type": "string"
					},
					"dbUser": {
						"type": "string"
					},
					"pwd": {
						"type": "string"
					},
					"table": {
						"type": "string"
					},
					"dbms": {
						"$ref": "#/components/schemas/AcceptableDbms"
					},
					"rowCounts": {
						"type": "number",
						"format": "double"
					},
					"skip": {
						"type": "number",
						"format": "double"
					},
					"sheet": {
						"type": "number",
						"format": "double"
					},
					"isActive": {
						"type": "boolean"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"service": {
						"$ref": "#/components/schemas/Service"
					},
					"columns": {
						"items": {
							"$ref": "#/components/schemas/MetaColumn"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"title",
					"dataType",
					"originalFileName",
					"remoteFilePath",
					"filePath",
					"extension",
					"host",
					"port",
					"db",
					"dbUser",
					"pwd",
					"table",
					"dbms",
					"rowCounts",
					"skip",
					"sheet",
					"isActive",
					"user",
					"service",
					"columns",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceColumn": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"columnName": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"hidden": {
						"type": "boolean"
					},
					"service": {
						"$ref": "#/components/schemas/Service"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"columnName",
					"type",
					"hidden",
					"service",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptableType": {
				"enum": [
					"bigint",
					"int",
					"double",
					"bit",
					"date",
					"datetime",
					"time",
					"varchar",
					"text",
					"longtext",
					"boolean"
				],
				"type": "string"
			},
			"MetaColumn": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"originalColumnName": {
						"type": "string"
					},
					"columnName": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/AcceptableType"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"isHidden": {
						"type": "boolean"
					},
					"isSearchable": {
						"type": "boolean"
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					},
					"params": {
						"items": {
							"$ref": "#/components/schemas/MetaParam"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"originalColumnName",
					"columnName",
					"type",
					"size",
					"order",
					"isHidden",
					"isSearchable",
					"meta",
					"params",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ParamOperatorType": {
				"enum": [
					"lt",
					"lte",
					"gt",
					"gte",
					"like",
					"eq",
					"neq"
				],
				"type": "string"
			},
			"MetaParam": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"metaColumn": {
						"$ref": "#/components/schemas/MetaColumn"
					},
					"operator": {
						"$ref": "#/components/schemas/ParamOperatorType"
					},
					"description": {
						"type": "string"
					},
					"isRequired": {
						"type": "boolean"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"metaColumn",
					"operator",
					"description",
					"isRequired",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"postDbmsParams": {
				"properties": {
					"serviceId": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"dbms": {
						"type": "string"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"database": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"required": [
					"serviceId",
					"title",
					"dbms",
					"host",
					"port",
					"database",
					"user",
					"password",
					"table"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FileUrlParam": {
				"properties": {
					"serviceId": {
						"type": "number",
						"format": "double"
					},
					"url": {
						"type": "string"
					},
					"ext": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"skip": {
						"type": "number",
						"format": "double"
					},
					"sheet": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"serviceId",
					"url",
					"ext",
					"title",
					"skip",
					"sheet"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApplicationParams": {
				"properties": {
					"nameSpace": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"nameSpace",
					"title",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetaColumnSaveParams": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"columnName": {
						"type": "string"
					},
					"isHidden": {
						"type": "boolean"
					},
					"isSearchable": {
						"type": "boolean"
					},
					"size": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"type": {
						"$ref": "#/components/schemas/AcceptableType"
					},
					"serviceId": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string"
							}
						]
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"originalColumnName": {
						"type": "string"
					},
					"createdAt": {},
					"updatedAt": {},
					"params": {}
				},
				"required": [
					"id",
					"columnName",
					"isHidden",
					"isSearchable",
					"type",
					"order",
					"originalColumnName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetaSaveParams": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"dataType": {
						"type": "string"
					},
					"columns": {
						"items": {
							"$ref": "#/components/schemas/MetaColumnSaveParams"
						},
						"type": "array"
					},
					"originalFileName": {},
					"filePath": {},
					"extension": {},
					"host": {},
					"port": {},
					"db": {},
					"dbUser": {},
					"pwd": {},
					"table": {},
					"dbms": {},
					"rowCounts": {},
					"skip": {},
					"sheet": {},
					"isActive": {},
					"createdAt": {},
					"updatedAt": {},
					"service": {},
					"remoteFilePath": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"title",
					"dataType",
					"columns"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceSaveParams": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"method": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"entityName": {
						"type": "string"
					},
					"tableName": {},
					"columnLength": {},
					"dataCounts": {},
					"status": {},
					"createdAt": {},
					"updatedAt": {},
					"meta": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MetaSaveParams"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"user": {},
					"application": {}
				},
				"required": [
					"id",
					"title",
					"method",
					"description",
					"entityName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetaParamSaveParams": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"isRequired": {
						"type": "boolean"
					},
					"operator": {
						"$ref": "#/components/schemas/ParamOperatorType"
					},
					"createdAt": {},
					"updatedAt": {}
				},
				"required": [
					"isRequired",
					"operator"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApplicationSaveParams": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"nameSpace": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"services": {
						"items": {
							"$ref": "#/components/schemas/ServiceSaveParams"
						},
						"type": "array"
					},
					"params": {
						"properties": {},
						"additionalProperties": {
							"items": {
								"$ref": "#/components/schemas/MetaParamSaveParams"
							},
							"type": "array"
						},
						"type": "object"
					},
					"status": {},
					"createdAt": {},
					"updatedAt": {},
					"user": {},
					"userId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"nameSpace",
					"title",
					"description",
					"services",
					"params"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TrafficConfigParam": {
				"properties": {
					"type": {
						"type": "string"
					},
					"maxCount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type",
					"maxCount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatabaseConnection": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"connectionName": {
						"type": "string"
					},
					"hostname": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"database": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"dbms": {
						"$ref": "#/components/schemas/AcceptableDbms"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"connectionName",
					"hostname",
					"port",
					"database",
					"username",
					"password",
					"dbms",
					"user",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatabaseConnectionCreateParams": {
				"properties": {
					"title": {
						"type": "string"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"db": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"pwd": {
						"type": "string"
					},
					"dbms": {
						"$ref": "#/components/schemas/AcceptableDbms"
					}
				},
				"required": [
					"title",
					"host",
					"port",
					"db",
					"user",
					"pwd",
					"dbms"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceParams": {
				"properties": {
					"method": {
						"type": "string"
					},
					"entityName": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"applicationId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"method",
					"entityName",
					"description",
					"applicationId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginParams": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenParams": {
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"authorizationUrl": "http://swagger.io/api/oauth/dialog",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"scopes": {}
			}
		}
	},
	"info": {
		"title": "api-gen",
		"version": "0.0.1",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/metas/dbms": {
			"post": {
				"operationId": "PostDbms",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Meta"
								}
							}
						}
					}
				},
				"tags": [
					"Meta"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/postDbmsParams"
							}
						}
					}
				}
			}
		},
		"/api/metas/file": {
			"post": {
				"operationId": "PostFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "File upload의 경우 api doc 생성을 위해서는 tsoa.json에 param 설정을 해야함.\n  body param 정보는 tsoa.json을 참고해주세요.",
				"tags": [
					"Meta"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									},
									"title": {
										"type": "string"
									},
									"skip": {
										"type": "integer"
									},
									"sheet": {
										"type": "integer"
									},
									"serviceId": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/metas/file-url": {
			"post": {
				"operationId": "PostFileUrl",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Meta"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FileUrlParam"
							}
						}
					}
				}
			}
		},
		"/api/applications": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Put",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Application"
								}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ApplicationParams"
							}
						}
					}
				}
			}
		},
		"/api/applications/{applicationId}/api-docs": {
			"get": {
				"operationId": "GetDocs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "applicationId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/applications/{applicationId}": {
			"get": {
				"operationId": "GetDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "applicationId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/applications/{id}": {
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/applications/{id}/deploy": {
			"post": {
				"operationId": "Deploy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/applications/{id}/undeploy": {
			"post": {
				"operationId": "Undeploy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/applications/{id}/save": {
			"post": {
				"operationId": "Save",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Application"
								}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ApplicationSaveParams"
							}
						}
					}
				}
			}
		},
		"/api/applications/{id}/traffic-configs": {
			"get": {
				"operationId": "GetTrafficConfigs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TrafficConfig"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "PostTrafficConfigs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TrafficConfig"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/TrafficConfigParam"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/api/database-connections": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DatabaseConnection"
								}
							}
						}
					}
				},
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DatabaseConnectionCreateParams"
							}
						}
					}
				}
			}
		},
		"/api/database-connections/{connectionId}": {
			"get": {
				"operationId": "GetTablesInConnection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "DB에 접속하여 Table 목록을 불러옵니다.",
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/database-connections/{connectionId}/tables": {
			"get": {
				"operationId": "GetConnection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Database Connection의 상세 정보를 보여줍니다.",
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Database Connection의 id",
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/database-connections/{connectionId}/tables/{tableName}": {
			"get": {
				"operationId": "GetTable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "DB에 접속하여 Table의 컬럼 목록과 정보를 가져옵니다.",
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "정보를 가져오려는 테이블 명",
						"in": "path",
						"name": "tableName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/services": {
			"post": {
				"operationId": "Put",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Service"
								}
							}
						}
					}
				},
				"tags": [
					"Service"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceParams"
							}
						}
					}
				}
			}
		},
		"/api/services/{serviceId}": {
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Service"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "serviceId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/oauth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserInterface"
								}
							}
						}
					}
				},
				"description": "username과 password를 사용하여 JWT 를 발급합니다.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "usename: 사용자 이름, password: 비밀번호",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginParams"
							}
						}
					}
				}
			}
		},
		"/api/oauth/token": {
			"post": {
				"operationId": "Refresh",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "refreshToken을 사용하여 token을 재발급 합니다.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TokenParams"
							}
						}
					}
				}
			}
		},
		"/rest/applications": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"#Applications"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "nameSpace",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rest/applications/{id}": {
			"get": {
				"operationId": "GetDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"#Applications"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/rest/services": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"#Services"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "entityName",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rest/services/{id}": {
			"get": {
				"operationId": "GetDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"#Services"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}
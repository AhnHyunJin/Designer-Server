{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserInterface": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"username",
					"token",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"$ref": "#/components/schemas/UserInterface"
			},
			"Application": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"nameSpace": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"services": {
						"items": {
							"$ref": "#/components/schemas/Service"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"nameSpace",
					"title",
					"description",
					"status",
					"user",
					"services",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptableDbms": {
				"enum": [
					"mysql",
					"oracle",
					"mariadb",
					"postgres"
				],
				"type": "string"
			},
			"Service": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"method": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"entityName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					},
					"columnLength": {
						"type": "number",
						"format": "double"
					},
					"dataCounts": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"application": {
						"$ref": "#/components/schemas/Application"
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					},
					"columns": {
						"items": {
							"$ref": "#/components/schemas/ServiceColumn"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"title",
					"method",
					"description",
					"entityName",
					"tableName",
					"columnLength",
					"dataCounts",
					"status",
					"user",
					"application",
					"meta",
					"columns",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptableType": {
				"enum": [
					"bigint",
					"int",
					"double",
					"bit",
					"date",
					"datetime",
					"time",
					"varchar",
					"text",
					"longtext",
					"boolean"
				],
				"type": "string"
			},
			"Meta": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"dataType": {
						"type": "string"
					},
					"originalFileName": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					},
					"extension": {
						"type": "string"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"db": {
						"type": "string"
					},
					"dbUser": {
						"type": "string"
					},
					"pwd": {
						"type": "string"
					},
					"table": {
						"type": "string"
					},
					"dbms": {
						"$ref": "#/components/schemas/AcceptableDbms"
					},
					"rowCounts": {
						"type": "number",
						"format": "double"
					},
					"skip": {
						"type": "number",
						"format": "double"
					},
					"sheet": {
						"type": "number",
						"format": "double"
					},
					"isActive": {
						"type": "boolean"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"service": {
						"$ref": "#/components/schemas/Service"
					},
					"columns": {
						"items": {
							"$ref": "#/components/schemas/MetaColumn"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"title",
					"dataType",
					"originalFileName",
					"filePath",
					"extension",
					"host",
					"port",
					"db",
					"dbUser",
					"pwd",
					"table",
					"dbms",
					"rowCounts",
					"skip",
					"sheet",
					"isActive",
					"user",
					"service",
					"columns",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetaColumn": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"originalColumnName": {
						"type": "string"
					},
					"columnName": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/AcceptableType"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"originalColumnName",
					"columnName",
					"type",
					"size",
					"order",
					"meta",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceColumn": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"columnName": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"hidden": {
						"type": "boolean"
					},
					"service": {
						"$ref": "#/components/schemas/Service"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"columnName",
					"type",
					"hidden",
					"service",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApplicationParams": {
				"properties": {
					"namespace": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"namespace",
					"title",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatabaseConnection": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"connectionName": {
						"type": "string"
					},
					"hostname": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"database": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"dbms": {
						"$ref": "#/components/schemas/AcceptableDbms"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"connectionName",
					"hostname",
					"port",
					"database",
					"username",
					"password",
					"dbms",
					"user",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatabaseConnectionCreateParams": {
				"properties": {
					"title": {
						"type": "string"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"db": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"pwd": {
						"type": "string"
					},
					"dbms": {
						"$ref": "#/components/schemas/AcceptableDbms"
					}
				},
				"required": [
					"title",
					"host",
					"port",
					"db",
					"user",
					"pwd",
					"dbms"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceParams": {
				"properties": {
					"method": {
						"type": "string"
					},
					"entityName": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"applicationId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"method",
					"entityName",
					"description",
					"applicationId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginParams": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenParams": {
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"authorizationUrl": "http://swagger.io/api/oauth/dialog",
				"scheme": "bearer",
				"bearerFormet": "JWT",
				"scopes": {}
			}
		}
	},
	"info": {
		"title": "api-gen",
		"version": "0.0.1",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/applications": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Put",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Application"
								}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ApplicationParams"
							}
						}
					}
				}
			}
		},
		"/api/applications/{applicationId}": {
			"get": {
				"operationId": "GetDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Applications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "applicationId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/database-connections": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DatabaseConnection"
								}
							}
						}
					}
				},
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DatabaseConnectionCreateParams"
							}
						}
					}
				}
			}
		},
		"/api/database-connections/{connectionId}": {
			"get": {
				"operationId": "GetConnection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Database Connection의 상세 정보를 보여줍니다.",
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Database Connection의 id",
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/database-connections/{connectionId}/tables": {
			"get": {
				"operationId": "GetTablesInConnection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "DB에 접속하여 Table 목록을 불러옵니다.",
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/database-connections/{connectionId}/tables/{tableName}": {
			"get": {
				"operationId": "GetTable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "DB에 접속하여 Table의 컬럼 목록과 정보를 가져옵니다.",
				"tags": [
					"Database Connection"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "connectionId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "정보를 가져오려는 테이블 명",
						"in": "path",
						"name": "tableName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/services": {
			"post": {
				"operationId": "Put",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Service"
								}
							}
						}
					}
				},
				"tags": [
					"Service"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceParams"
							}
						}
					}
				}
			}
		},
		"/api/oauth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserInterface"
								}
							}
						}
					}
				},
				"description": "username과 password를 사용하여 JWT 를 발급합니다.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "usename: 사용자 이름, password: 비밀번호",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginParams"
							}
						}
					}
				}
			}
		},
		"/api/oauth/token": {
			"post": {
				"operationId": "Refresh",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "refreshToken을 사용하여 token을 재발급 합니다.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TokenParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}